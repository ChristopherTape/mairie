import logging
from twilio.rest import Client
from django.conf import settings
from .models import FormulaireDemandeActeNaissance  # Assurez-vous d'importer le mod√®le appropri√©

logger = logging.getLogger(__name__)

def sendsms(commande_id):
    logger.info("Pr√©paration de l'envoi du SMS")
    account_sid = settings.TWILIO_ACCOUNT_SID
    auth_token = settings.TWILIO_AUTH_TOKEN
    client = Client(account_sid, auth_token)

    try:
        # R√©cup√©rer la commande depuis la base de donn√©es
        commande = FormulaireDemandeActeNaissance.objects.get(id=commande_id)
        to_number = commande.tel

        if commande.livraison == 'presentiel':
            message_body = (
                f"Votre commande #{commande_id} est termin√©e. "
                f"Vous pouvez venir r√©cup√©rer votre commande."
                f"merci d'avoir utiliser la_mairie_chez_vous"
            )
        elif commande.livraison == 'point de relais':
            message_body = (
                f"Votre commande #{commande_id} est termin√©e. "
                f"Vous pouvez aller la r√©cup√©rer dans votre point de relais choisi : {commande.ville_de_livraison}."
                f"merci d'avoir utiliser la_mairie_chez_vous"
            )
        elif commande.livraison == 'livraison':
            message_body = (
                f"Votre commande #{commande_id} est termin√©e. "
                f"Un agent de livraison viendra vous livrer √† cette adresse : {commande.ville_de_livraison}."
                f"merci d'avoir utiliser la_mairie_chez_vous"
            )
        else:
            message_body = (
                f"Votre commande #{commande_id} est termin√©e. "
                "Merci d'avoir utilis√© notre application la_mairie_chez_vous üòä"
            )

        # Envoyer le SMS
        message = client.messages.create(
            body=message_body,
            from_='+14177886788',  # Remplacez par votre num√©ro Twilio v√©rifi√©
            to=to_number,
        )

        logger.info(f"SMS envoy√© : {message.sid}")
        print("Votre commande est termin√©e, vous pouvez la r√©cup√©rer √† l'adresse marqu√©e sur votre re√ßu.")
    except FormulaireDemandeActeNaissance.DoesNotExist:
        logger.error(f"Commande avec l'ID {commande_id} n'existe pas.")
    except Exception as e:
        logger.error(f"Erreur lors de l'envoi du SMS : {str(e)}")


logger = logging.getLogger(__name__)

def sendsms_refus(commande_id):
    logger.info("Pr√©paration de l'envoi du SMS")
    account_sid = settings.TWILIO_ACCOUNT_SID
    auth_token = settings.TWILIO_AUTH_TOKEN
    client = Client(account_sid, auth_token)

    try:
        # R√©cup√©rer la commande depuis la base de donn√©es
        commande = FormulaireDemandeActeNaissance.objects.get(id=commande_id)
        to_number = commande.tel
        message_body = (
            f"Votre commande #{commande_id} a √©t√© refus√©e, "
            "motif: incoh√©rence des informations. "
            "Vous serez rembours√© dans de brefs d√©lais."
        )

        message = client.messages.create(
            body=message_body,
            from_='+14177886788',  # Remplacez par votre num√©ro Twilio v√©rifi√©
            to=to_number,
        )

        logger.info(f"SMS envoy√© : {message.sid}")
    except FormulaireDemandeActeNaissance.DoesNotExist:
        logger.error(f"Commande avec l'ID {commande_id} n'existe pas.")
    except Exception as e:
        logger.error(f"Erreur lors de l'envoi du SMS : {str(e)}")